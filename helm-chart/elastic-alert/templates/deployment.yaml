apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "elastic-alert.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "elastic-alert.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "elastic-alert.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "elastic-alert.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "elastic-alert.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: setup
          configMap:
            name: {{ include "elastic-alert.fullname" . }}-setup
            items:
              - key: config.yaml
                path: config.yaml
        - name: rules
          configMap:
            name: {{ include "elastic-alert.fullname" . }}-rules
        {{- if .Values.rules.builtIn.create }}
        - name: built-in-rules
          configMap:
            name: {{ include "elastic-alert.fullname" . }}-built-in-rules
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
      containers:
        - name: init-config-reloader
          image: "{{ .Values.configReloader.image.registry }}/{{ .Values.configReloader.image.repository }}:{{ .Values.configReloader.image.tag }}"
          args:
            - '-volume-dir=/rules/customs'
            - '-volume-dir=/rules/built-in'
            - '-webhook-url=http://127.0.0.1:8080/-/reload'
          ports:
            - name: reloader-web
              containerPort: 9533
              protocol: TCP
          resources:
            {{- toYaml .Values.configReloader.resources | nindent 12 }}
          volumeMounts:
            - name: rules
              mountPath: /rules/customs
            {{- if .Values.rules.builtIn.create }}
            - name: built-in-rules
              mountPath: /rules/built-in
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: setup
              mountPath: '/etc/config.yaml'
              subPath: config.yaml
            {{- if .Values.rules.builtIn.create }}
            - name: built-in-rules
              mountPath: /rules/built-in
            - name: rules
              mountPath: /rules/customs
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
          ports:
            - name: metrics
              containerPort: 9003
              protocol: TCP
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
